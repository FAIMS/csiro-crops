<?xml version="1.0" ?>
<module>

<Login f="nodata">
  <Login>
    <User_ID t="dropdown" f="user">
      <!--TODO: Must be remembered and login tabgroup skipped on subsequent
           logins-->
    </User_ID>
    <Login t="button" l="Main"/>
  </Login>
</Login>

<Main f="nodata">
  <Main>
    <Record_Field t="button" l="Field"/>
    <Logout t="button" l="Login"/>
  </Main>
  <Search>
    <Records t="list"/>
    <!--TODO: List of recorded archents stored in localsettings. (we'll need to
         figure out how to do it)-->
  </Search>
</Main>

<Field>
  <Field>
    <!--TODO: (no certainty on anything)-->
    <Crop_Type f="id">
      <str>
        <!--TODO:-->
        <!--  BRIAN:-->
        <!--    Crop, show annotation if not null, year-->
        <!--    So we can do Wheat 2016-->
        <!--    so if annotation, show it with ": annotation"-->
        <!--{{if and($1, not($3)) then "$1 "}}{{if and($1, $3) then "$3 "}} let's see what that does-->
        <!--basically, if there's no freetext, write vocab-->
        <!--if there's freetext, write freetext-->
        <fmt>{{if and($1, not($3)) then "$1 "}}{{if and($1, $3) then "$3 "}}</fmt>
      </str>
      <opts>
        <opt>Wheat</opt>
        <opt>Barley</opt>
        <opt>Oats</opt>
        <opt>Tricicale</opt>
        <opt>Rye</opt>
        <opt>Canola</opt>
        <opt>Lupins</opt>
        <opt>Field Peas</opt>
        <opt>Chickpeas</opt>
        <opt>Fababeans</opt>
        <opt>Lentils</opt>
        <opt>Vetch</opt>
        <opt>Sunflower</opt>
        <opt>Sorghum</opt>
        <opt>Cotton</opt>
        <opt>Rice</opt>
        <opt>Sown legume pasture</opt>
        <opt>Volunteer pasture</opt>
        <opt>Other</opt>
      </opts>
    </Crop_Type>
    <Year b="decimal" f="id"/>
    <Month_of_Sowing b="date"/>
    <Month_of_Harvest t="radio">
      <opts>
        <opt>March</opt>
        <opt>April</opt>
        <opt>May</opt>
      </opts>
    </Month_of_Harvest>
    <Enterprise t="radio">
      <opts>
        <opt>Yes</opt>
        <opt>No</opt>
      </opts>
    </Enterprise>
    <Photo t="camera"/>
    <Notes/>
  </Field>
  <Location>
    <Record_Center_of_Paddock t="button">
      <!--TODO: (Writes point to archent)-->
    </Record_Center_of_Paddock>
    <Centre f="readonly nodata">
      <!--TODO: Write AsText Archent polygon to here-->
    </Centre>
    <cols>
      <col>
        <Record_NW_Corner_of_Paddock t="button"/>
        <Record_NE_Corner_of_Paddock t="button"/>
      </col>
      <col>
        <Record_SW_Corner_of_Paddock t="button"/>
        <Record_SE_Corner_of_Paddock t="button"/>
      </col>
    </cols>
    <cols>
      <col>
        <NW_Corner_of_Paddock f="nodata readonly"/>
        <NE_Corner_of_Paddock f="nodata readonly"/>
      </col>
      <col>
        <SW_Corner_of_Paddock f="nodata readonly"/>
        <SE_Corner_of_Paddock f="nodata readonly"/>
      </col>
    </cols>
  </Location>
</Field>

<logic>
/**************************** USERNAME PERSISTENCE ****************************/
/* Remembers username selected from previous session and automatically logs   */
/* the user in with it subsequent sessions.                                   */
/*                                                                            */
/* Requirement source: Email, "Fwd: my contact details"                       */
/******************************************************************************/
  addOnEvent("Login/Login/User_ID", "load",  "tryLoadingPreviousUser()");
  addOnEvent("Login/Login/Login",   "click", "savePreviousUser()");

  tryLoadingPreviousUser() {
    String gotoTabGroup = "Main";
    String key = "Login/Login/User_ID";
    String q = "SELECT value FROM localSettings WHERE key = '" + key + "';";

    fetchOne(q, new FetchCallback() {
      onFetch(result) {
        if (!isNull(result)) {
          String userVocabId = result.get(0);
          selectUser(userVocabId);
          showTabGroup(gotoTabGroup);
        }
      }
    });
  }

  savePreviousUser() {
    String key = "Login/Login/User_ID";
    String val = getFieldValue(key);
    insertIntoLocalSettings(key, val);
  }

  selectUser (String userVocabId) {
    String userQ = "SELECT userid,fname,lname,email FROM user " +
                   "WHERE  userid='" + userVocabId + "';";
    FetchCallback callback = new FetchCallback() {
      onFetch(result) {
        user = new User(
              result.get(0),
              result.get(1),
              result.get(2),
              result.get(3)
        );
        setUser(user);
        username = result.get(1) + " " + result.get(2);
      }
    };

    fetchOne(userQ, callback);
  }

/******************************* READING POINTS *******************************/
// On load, read points
</logic>

</module>
